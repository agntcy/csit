# SPDX-FileCopyrightText: Copyright (c) 2025 Cisco and/or its affiliates.
# SPDX-License-Identifier: Apache-2.0

---
version: '3'

silent: true

vars:
  KIND_CLUSTER_NAME: '{{ .KIND_CLUSTER_NAME | default "agntcy-test" }}'

  ## Image config
  IMAGE_REPO: '{{ .IMAGE_REPO | default "ghcr.io/agntcy" }}'
  GATEWAY_IMAGE_TAG: '{{ .GATEWAY_IMAGE_TAG | default "0.1.0-rc0-2-g421c6ce" }}'

  IMAGE_BAKE_OPTS: '{{ .IMAGE_BAKE_OPTS | default "--set *.platform=linux/arm64" }}'
  TEST_APP_TAG: '{{ .TEST_APP_TAG | default "v0.0.0-dev" }}'

  AZURE_OPENAI_API_KEY: '{{ .AZURE_OPENAI_API_KEY | default "" }}'
  AZURE_OPENAI_ENDPOINT: '{{ .AZURE_OPENAI_ENDPOINT | default "" }}'


tasks:
  default:
    cmds:
      - task -l

  kind:create:
    desc: Create kind cluster
    cmds:
      - kind create cluster --name {{.KIND_CLUSTER_NAME}} --wait 60s || true
      - kubectl cluster-info --context kind-{{.KIND_CLUSTER_NAME}}
      - task: kind:load-images

  kind:destroy:
    desc: Destroy kind cluster
    cmds:
      - kind delete cluster --name {{.KIND_CLUSTER_NAME}}

  kind:load-images:
    internal: true
    cmds:
      # pull images
      - docker pull {{.IMAGE_REPO}}/agp/gw:{{.GATEWAY_IMAGE_TAG}}
      # load images
      - kind load docker-image {{.IMAGE_REPO}}/agp/gw:{{.GATEWAY_IMAGE_TAG}} --name {{.KIND_CLUSTER_NAME}}

  k8s:port-forward:setup:gateway:
    internal: true
    cmds:
      - kubectl port-forward svc/agntcy-agp-gateway -n default 46357 &
      - sleep 1

  k8s:port-forward:teardown:gateway:
    internal: true
    cmds:
      - kill -9 $(ps aux | grep port-forward | grep agntcy-agp-gateway | awk '{print $2}') || truex

  test:env:gateway:deploy:
    desc: Deploy agent gateway test env
    vars:
      HELM_NAMESPACE:  '{{ .HELM_NAMESPACE | default "default" }}'
    cmds:
      - |
        helm dependency build ./agntcy-agp/components/helm
        helm upgrade agntcy-agp \
          ./agntcy-agp/components/helm \
          --set gateway.image.tag="{{ .GATEWAY_IMAGE_TAG }}" \
          --namespace {{ .HELM_NAMESPACE }} \
          --create-namespace \
          --install \
          --wait \
          --wait-for-jobs \
          --timeout "15m"

  test:env:gateway:cleanup:
    desc: Remove agent gateway test env
    vars:
      HELM_NAMESPACE: '{{ .HELM_NAMESPACE | default "default" }}'
    cmds:
      - helm delete --namespace {{ .HELM_NAMESPACE }} agntcy-agp

  build:gateway:agentic-apps:
    desc: Build agentic containers
    dir: ./agntcy-agp/agentic-apps
    cmds:
      - docker buildx bake {{ .IMAGE_BAKE_OPTS }} --load

  test:autogen-agent:run:
    internal: true
    cmds:
      - |
        hostNetFlag=""
        hostMachine=http://host.docker.internal:46357
        unameOut=$(uname -s)
        case ${unameOut} in
            Linux*)
              hostMachine=http://127.0.0.1:46357
              hostNetFlag="--net=host"
            ;;
            Darwin*)
              hostMachine=http://host.docker.internal:46357
            ;;
            *)
        exsac
        echo "gw host: ${hostMachine}"

        docker run -d --rm \
        -e AZURE_OPENAI_API_KEY={{.AZURE_OPENAI_API_KEY}} \
        -e AZURE_OPENAI_ENDPOINT={{.AZURE_OPENAI_ENDPOINT}} \
        ${hostNetFlag} \
        --name autogen-agent \
        {{ .IMAGE_REPO }}/csit/test-autogen-agent:{{ .TEST_APP_TAG }} \
        poetry run python autogen_agent.py -g ${hostMachine}

  test:autogen-agent:remove:
    internal: true
    cmds:
      - docker stop $(docker ps -a --no-trunc --filter name=^/autogen-agent$ -q)

  test:gateway:
    desc: Gateway test
    cmds:
      - task: k8s:port-forward:setup:gateway
      - defer: { task: k8s:port-forward:teardown:gateway }
      - task: test:autogen-agent:run
      - defer: { task: test:autogen-agent:remove }
      - IMAGE_REPO={{.IMAGE_REPO}} TEST_APP_TAG={{.TEST_APP_TAG}} go test ./agntcy-agp/tests -v -failfast -test.v -test.paniconexit0 -ginkgo.timeout 30m -timeout 30m -ginkgo.v

  version:
    desc: Get version
    cmds:
      - git describe --tags --match "v*" | cut -c 2-